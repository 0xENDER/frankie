on:
  workflow_call: # Added this line to make it reusable
    inputs:
      linux_system:
        required: false
        type: string
        default: ubuntu-latest
      mac_system:
        required: false
        type: string
        default: macos-latest
      build_platform:
        required: true
        type: string
      build_platform_name:
        required: true
        type: string
      build_mode:
        required: true
        type: string
      bundle_binaries:
        required: true
        type: boolean

jobs:

  # Linux
  build-transpiler-on-ubuntu-latest:
    name: Linux ${{inputs.build_platform_name}}
    runs-on: ${{inputs.linux_system}}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake valgrind

    - name: Make the "transpiler/build" directory
      run: mkdir ${{github.workspace}}/transpiler/build

    - name: Configure CMake
      run: cmake .. -DCMAKE_BUILD_TYPE=${{inputs.build_mode}} -DCMAKE_UNIX_GENERATOR_PLATFORM=${{inputs.build_platform}}
      working-directory: transpiler/build

    - name: Build
      run: cmake --build . --config ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Run Tests
      run: ctest -VV -C ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Extract version (optional)
      if: inputs.bundle_binaries
      run: |
        VERSION=$(grep "VERSION=" "${{github.workspace}}/transpiler/manifest.ini" | cut -d '=' -f 2 | tr -d '"' | xargs)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Upload Binaries Artifact (optional)
      if: inputs.bundle_binaries
      uses: actions/upload-artifact@v4
      with:
        name: PolarFrankie-${{inputs.build_mode}}-v${{env.VERSION}}-Linux-${{inputs.build_platform_name}}
        path: ${{github.workspace}}/transpiler/dist/${{inputs.build_mode}}/${{inputs.build_platform_name}}/

  # macOS
  build-transpiler-on-macos-latest:
    name: macOS ${{inputs.build_platform_name}}
    runs-on: ${{inputs.mac_system}}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        brew update
        brew install --formula cmake --quiet

    - name: Make the "transpiler/build" directory
      run: mkdir ${{github.workspace}}/transpiler/build

    - name: Configure CMake
      run: cmake .. -DCMAKE_BUILD_TYPE=${{inputs.build_mode}} -DCMAKE_UNIX_GENERATOR_PLATFORM=${{inputs.build_platform}}
      working-directory: transpiler/build

    - name: Build
      run: cmake --build . --config ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Run Tests
      run: ctest -VV -C ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Extract version (optional)
      if: inputs.bundle_binaries
      run: |
        VERSION=$(grep "VERSION=" "${{github.workspace}}/transpiler/manifest.ini" | cut -d '=' -f 2 | tr -d '"' | xargs)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Upload Binaries Artifact (optional)
      if: inputs.bundle_binaries
      uses: actions/upload-artifact@v4
      with:
        name: PolarFrankie-${{inputs.build_mode}}-v${{env.VERSION}}-macOS-${{inputs.build_platform_name}}
        path: ${{github.workspace}}/transpiler/dist/${{inputs.build_mode}}/${{inputs.build_platform_name}}/
