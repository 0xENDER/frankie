name: Release
on:
  push:
    tags:
      - 'v*'

jobs:

  # VSCode
  build-vscode-extension:
    name: 
    uses: ./.github/workflows/build_vscode_extension.yml
    with:
      upload_artifact: true

  # Transpiler binaries
  build-transpiler-debug:
    name: Debug
    uses: ./.github/workflows/_transpiler_dynamic_build.yml
    with:
      build_mode: Debug
      bundle_binaries: true
  build-transpiler-release:
    name: Release
    uses: ./.github/workflows/_transpiler_dynamic_build.yml
    with:
      build_mode: Release
      bundle_binaries: true

  create-github-release:
    runs-on: ubuntu-latest
    needs:
    - build-vscode-extension
    - build-transpiler-debug
    - build-transpiler-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{github.ref_name}}
          release_name: PolarFrankie ${{github.ref_name}}
          draft: true
          prerelease: true # For now, all releases are pre-releases
          body: |
            Automatically generated release from tag ${{github.ref_name}}

      - name: List Artifacts
        run: |
          gh api repos/${{github.repository}}/actions/runs/${{github.run_id}}/artifacts --jq '.artifacts[] | .name' | tr -d '"' > artifacts.txt

      - name: Attach Artifacts
        run: |
          while IFS= read -r artifact_name; do
            echo "Downloading and uploading artifact: $artifact_name"
            mkdir -p artifacts
            gh run download ${{github.run_id}} -n "$artifact_name" -D artifacts
            zip -r "$artifact_name.zip" artifacts/"$artifact_name"
            rm -rf artifacts/"$artifact_name"
            gh release upload ${{github.ref_name}} "$artifact_name.zip" --repo ${{github.repository}}
            rm "$artifact_name.zip"
          done < artifacts.txt
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
