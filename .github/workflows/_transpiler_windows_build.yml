on:
  workflow_call: # Added this line to make it reusable
    inputs:
      build_platform:
        required: true
        type: string
      build_platform_name:
        required: true
        type: string
      build_mode:
        required: true
        type: string
      bundle_binaries:
        required: true
        type: boolean

jobs:

  # Windows
  build-transpiler-on-windows-latest:
    name: Windows ${{inputs.build_platform_name}}
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11 (or later)
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Get MSVC tools arch
      run: |
        $arch = "${{inputs.build_platform_name}}"
        arm32 arm64 x86_32 x86_64
        if ($arch -eq "x86_64") {
          echo "MSVC_ARCH=x64" >> $env:GITHUB_ENV
        } elseif ($arch -eq "x86_32") {
          echo "MSVC_ARCH=x86" >> $env:GITHUB_ENV
        } elseif ($arch -eq "arm64") {
          echo "MSVC_ARCH=x86_amd64" >> $env:GITHUB_ENV
        } elseif ($arch -eq "arm32") {
          echo "MSVC_ARCH=x86_arm" >> $env:GITHUB_ENV
        } else {
          Write-Error "Couldn't determine architecture version to use with MSVC!"
          exit 1
        }

    - name: Install Visual Studio Build Tools
      uses: ilammy/msvc-dev-cmd@v1.13.0
      with:
        arch: ${{env.MSVC_ARCH}}
        sdk: 10.0.26100.0

    - name: Make the "transpiler/build" directory
      run: mkdir ${{github.workspace}}/transpiler/build

    - name: Configure CMake
      run: cmake .. -DCMAKE_BUILD_TYPE=${{inputs.build_mode}} -A ${{inputs.build_platform}}
      working-directory: transpiler/build

    - name: Build
      run: cmake --build . --config ${{inputs.build_mode}} --parallel 3
      working-directory: transpiler/build

    - name: Reset the "transpiler/build" directory
      run: |
        Remove-Item -Path "${{github.workspace}}/transpiler/build" -Recurse -Force
        mkdir ${{github.workspace}}/transpiler/build

    - name: Run Tests
      run: |
        cmake .. -DCMAKE_BUILD_TYPE=${{inputs.build_mode}} -A ${{inputs.build_platform}}
        ctest -VV -C ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Extract version (optional)
      if: inputs.bundle_binaries
      run: |
        $version = (Get-Item "*.exe" | Select-Object -First 1).VersionInfo.FileVersion
        if ($version) {
          echo "VERSION=$version" >> $env:GITHUB_ENV
        } else {
          Write-Error "Couldn't get VERSION info from the generated binaries!"
          exit 1
        }
      working-directory: ${{github.workspace}}/transpiler/dist/${{inputs.build_mode}}/${{inputs.build_platform_name}}/

    - name: Upload Binaries Artifact (optional)
      if: inputs.bundle_binaries
      uses: actions/upload-artifact@v4
      with:
        name: PolarFrankie-${{inputs.build_mode}}-v${{env.VERSION}}-Windows-${{inputs.build_platform_name}}
        path: ${{github.workspace}}/transpiler/dist/${{inputs.build_mode}}/${{inputs.build_platform_name}}/
