on:
  workflow_call: # Added this line to make it reusable
    inputs:
      build_mode:
        required: true
        type: string

jobs:

  # Windows
  build-transpiler-on-windows-latest-x86-64:
    name: Windows 64-bits
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11 (or later)
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Install Visual Studio Build Tools
      uses: ilammy/msvc-dev-cmd@v1.13.0

    - name: Make the "transpiler/build" directory
      run: mkdir ${{github.workspace}}/transpiler/build

    - name: Configure CMake
      run: cmake .. -DCMAKE_BUILD_TYPE=${{inputs.build_mode}} -A x64
      working-directory: transpiler/build

    - name: Build
      run: cmake --build . --config ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Run Tests
      run: ctest -VV -C ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Bundle Binaries (only on workflow_call)
#      if: github.event_name == 'workflow_call'
      run: |
        tar -cvf ${{github.workspace}}/transpiler/dist/bundle.tar ${{github.workspace}}/transpiler/dist/${{inputs.build_mode}}/x86_64/*

    - name: Extract version (only on workflow_call)
#      if: github.event_name == 'workflow_call'
      run: |
        $version = Get-Content "${{github.workspace}}/transpiler/manifest.ini" | Where-Object { $_ -match 'VERSION=' } | ForEach-Object { ($_ -split '=')[1].Trim('"') }
        if ($version) {
          echo "VERSION=$version" >> $env:GITHUB_ENV
        } else {
          Write-Error "VERSION not found in manifest.ini"
          exit 1
        }

    - name: Upload Binaries Artifact (only on workflow_call)
#      if: github.event_name == 'workflow_call'
      uses: actions/upload-artifact@v4
      with:
        name: PolarFrankie-v${{env.VERSION}}-Windows-x86_64-${{inputs.build_mode}}
        path: ${{github.workspace}}/transpiler/dist/bundle.tar

  # Linux
  build-transpiler-on-ubuntu-latest-x86-64:
    name: Linux 64-bits
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake valgrind

    - name: Make the "transpiler/build" directory
      run: mkdir ${{github.workspace}}/transpiler/build

    - name: Configure CMake
      run: cmake .. -DCMAKE_BUILD_TYPE=${{inputs.build_mode}} -DCMAKE_UNIX_GENERATOR_PLATFORM=x64
      working-directory: transpiler/build

    - name: Build
      run: cmake --build . --config ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Run Tests
      run: ctest -VV -C ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Bundle Binaries (only on workflow_call)
#      if: github.event_name == 'workflow_call'
      run: |
        tar -cvf ${{github.workspace}}/transpiler/dist/bundle.tar ${{github.workspace}}/transpiler/dist/${{inputs.build_mode}}/x86_64/*

    - name: Extract version (only on workflow_call)
#      if: github.event_name == 'workflow_call'
      run: |
        VERSION=$(grep "^version" ${{github.workspace}}/transpiler/manifest.ini | sed 's/version *= *//')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Upload Binaries Artifact (only on workflow_call)
#      if: github.event_name == 'workflow_call'
      uses: actions/upload-artifact@v4
      with:
        name: PolarFrankie-v${{env.VERSION}}-Linux-x86_64-${{inputs.build_mode}}
        path: ${{github.workspace}}/transpiler/dist/bundle.tar

  # macOS
  build-transpiler-on-macos-latest-x86-64:
    name: macOS 64-bits
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        brew update
        brew install cmake

    - name: Make the "transpiler/build" directory
      run: mkdir ${{github.workspace}}/transpiler/build

    - name: Configure CMake
      run: cmake .. -DCMAKE_BUILD_TYPE=${{inputs.build_mode}} -DCMAKE_UNIX_GENERATOR_PLATFORM=x64
      working-directory: transpiler/build

    - name: Build
      run: cmake --build . --config ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Run Tests
      run: ctest -VV -C ${{inputs.build_mode}}
      working-directory: transpiler/build

    - name: Bundle Binaries (only on workflow_call)
#      if: github.event_name == 'workflow_call'
      run: |
        tar -cvf ${{github.workspace}}/transpiler/dist/bundle.tar ${{github.workspace}}/transpiler/dist/${{inputs.build_mode}}/x86_64/*

    - name: Extract version (only on workflow_call)
#      if: github.event_name == 'workflow_call'
      run: |
        VERSION=$(grep "^version" ${{github.workspace}}/transpiler/manifest.ini | sed 's/version *= *//')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Upload Binaries Artifact (only on workflow_call)
#      if: github.event_name == 'workflow_call'
      uses: actions/upload-artifact@v4
      with:
        name: PolarFrankie-v${{env.VERSION}}-macOS-x86_64-${{inputs.build_mode}}
        path: ${{github.workspace}}/transpiler/dist/bundle.tar
