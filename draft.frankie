;; This echo style is defined by default in the echo library
type (echo) Error (
    $overflow=FALSE ;; if you wish for the style to overflow to include the message content
    $color-overflow=TRUE ;; colour-only overflow
    $bold-overflow=FALSE ;; bold-only overflow
    $color=COLOR_RED
    $bold=TRUE
    $prefix?="(!) Error: " ;; If you prefix the Type with a question mark (?), this assignment will be ignored!
)

;; This spawn style is defined by default in the spawn library
type (spawn) CleanSpawn (
    $clean-on-success=TRUE ;; This will clean up the logs of the spawned command when the output matches the @rule!
    $clean-on-end=FALSE ;; This will clean up the logs of the spawned command when the command is done running!
)

;; You can also import these types from the standard Frankie libraries
import CleanSpawn from <spawn>
import Error from <echo>

;; You can also import your own local Frankie files!
import MyType from "./my-type.frankie"

echo Error "You did something wrong!"
echo ?Error "You should be ashamed of yourself!"
;; These two lines will echo the following:

;; (!) Error: You did something wrong!
;; You should be ashamed of yourself!


;; You can define output match rules!
;; (rule functions can only return TRUE or FALSE)
rule @rule-function (
    ;; Do all the minipulation
    return TRUE ;; if the final output if valid, return TRUE! (this is a success)
)

;; You can spawn child processes, and check their output!
spawn CleanSpawn (
    npm i
) follow @rule-function (
    ;; You should always handle failures!
    ;; If you fail to handle at least one of these events, the build will fail!
    @on-mismatch (
        echo Error "Failed to install NPM dependencies!"
        return TRUE ;; Return true to indicate that this failure should end the script!
    )
    @on-match (
        echo Error "Installed NPM dependencies successfully!"
        return TRUE ;; Return true to indicate that this success should end the script! (As an error!)
    )
)
;; Make sure the function's output is as expected!
